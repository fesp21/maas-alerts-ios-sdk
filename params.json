{"name":"Maas-alerts-ios-sdk","tagline":"iOS MaaS Alerts & Notifications SDK.","body":"MaaSAlerts iOS SDK\r\n==================\r\n\r\nVersion 1.0.0\r\n\r\nThis is the iOS SDK for the Phunwares Alerts & Notifications MaaS module. Visit http://www.phunware.com/ for more details and to sign up.\r\n\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nMaaSAlerts has a dependency on MaaSCore.framework which is available here: https://github.com/phunware/maas-core-ios-sdk\r\n\r\nIt's recommended that you add the MaaS framesworks to 'MaaS Frameworks' directory. Then add the MaaSCore.framework and MaaSAlerts.framework to your Xcode project.\r\n\r\nThe following frameworks are required:\r\n````\r\nMaaSCore.framework\r\n````\r\n\r\nScroll down for implementation details.\r\n\r\n\r\n\r\nApplication Setup\r\n-----------------\r\nAt the top of your application delegate (.m) file add the following:\r\n\r\n````objective-c\r\n#import <MaaSCore/MaaSCore.h>\r\n#import <MaaSAlerts/MaaSAlerts.h>\r\n````\r\n\r\nInside your application delegate you will need to initialize MaaSCore in the application:didFinishLaunchingWithOptions: method:\r\n\r\n````objective-c\r\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\r\n{\r\n    [MaaSCore setApplicationID:@\"ed4a2073519192f9299e6b79afe680bc\"];\r\n    ...\r\n}\r\n````\r\n\r\nApple has three primary methods for handling remote notifications. You will need to implement these in your application delegate, forwarding the results to MaaSAlerts:\r\n\r\n````objective-c\r\n- (void)application:(UIApplication *)app didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)devToken\r\n{\r\n    [MaaSAlerts didRegisterForRemoteNotificationsWithDeviceToken:devToken];\r\n    ...\r\n}\r\n\r\n- (void)application:(UIApplication *)app didFailToRegisterForRemoteNotificationsWithError:(NSError *)err\r\n{\r\n    [MaaSAlerts didFailToRegisterForRemoteNotificationsWithError:err];\r\n    ...\r\n}\r\n\r\n- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo\r\n{\r\n    [MaaSAlerts didReceiveRemoteNotification:userInfo];\r\n    ...\r\n}\r\n````\r\n\r\nFor a complete example, see https://github.com/phunware/maas-core-ios-sdk/Sample\r\n\r\n\r\nSubscription Groups\r\n-------------------\r\n\r\nMaaSAlerts provides the ability to provide users a list of subscription groups from which more filtered alerts and notifications can be received. There are two methods the facilitate this, *getSubscriptionGroupsWithSuccess:failure:* and *subscribeToGroupsWithIDs:success:failure:*.\r\n\r\n````objective-c\r\n// Fetch an array of of the available subscriptions\r\n[MaaSAlerts getSubscriptionGroupsWithSuccess:^(NSArray *groups) {\r\n        // Display the available subscription groups to the user\r\n        // The groups array will contain dictionary objects the conform to the following structure: {@\"id\" : @\"SUBCRIPTION_GROU_ID\", @\"name\" : @\"SUBSCRIPTION_GROUP_NAME\"}\r\n    } failure:^(NSError *error) {\r\n\t\t// Handle error\r\n    }];\r\n    \r\n    \r\n// To update the subscription groups you would make the following call\r\n\r\nNSArray *subscribedGroups = @[@\"SUBSCRIPTION_GROUP_ID\", ...];\r\n[MaaSAlerts subscribeToGroupsWithIDs:subscribedGroups success:^{\r\n        // Handle success\r\nedGroups    } failure:^(NSError *error) {\r\n        // Handle error\r\n    }];\r\n}\r\n````\r\n\r\nOptional\r\n--------\r\n\r\nFetching extra information associated with a push notification using MaaSAlerts is easy using *getExtraInformationForPushID:success:failure:* \r\n\r\n````objective-c\r\n[MaaSAlerts getExtraInformationForPushID:@\"PUSH_ID\" success:^(NSDictionary *extraInformation) {\r\n        // Process the extra information\r\n    } failure:^(NSError *error) {\r\n        // Handle error\r\n    }]\r\n````\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}